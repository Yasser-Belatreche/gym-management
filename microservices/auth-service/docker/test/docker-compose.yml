version: '3.3'
#name: gym-management-auth-service-test

services:
  app:
    build:
      context: ../..
      dockerfile: docker/test/Dockerfile
    image: gym-management-golang:test
    container_name: gym-management-auth-service-test
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file:
      - ../../.env.test
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - RABBITMQ_URI=amqp://user:password@rabbitmq:5672/
    volumes:
      - ../../:/home/app/

  rabbitmq:
    image: rabbitmq:3
    container_name: gym-management-auth-service-rabbitmq-test
    ports:
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5

  db:
    image: postgres:latest
    container_name: gym-management-auth-service-postgres-test
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local