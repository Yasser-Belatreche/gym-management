name: Continuous Integration

on:
    push:
        branches:
            - 'deploy/microservices/service-discovery'

env:
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    IMAGE: ${{ secrets.DOCKER_USERNAME }}/gym-management-service-discovery

jobs:
    lint-test:
      name: Lint & Test
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: CD to Service Discovery Directory
          run: cd microservices/service-discovery
        - name: Get node version from .nvmrc
          id: nvmrc
          run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        - name: Setup Node
          uses: actions/setup-node@v3
          with:
            node-version: ${{ steps.nvmrc.outputs.NODE_VERSION }}
            cache: npm
        - name: Install Dependencies
          run: npm install
        - name: Run Lint
          run: npm run lint
        - name: Setup Test Environment
          run: npm run docker:test -- -d
        - name: Run Tests
          run: npm test

    dockerize:
        name: Dockerized and Push to Docker Hub
        runs-on: ubuntu-latest
        needs: build-test
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: CD to Service Discovery Directory
              run: cd microservices/service-discovery
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
            - name: Build The Image
              run: docker build . -f docker/prod/Dockerfile -t ${{ env.IMAGE }}:latest
            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ env.DOCKER_USERNAME }}
                  password: ${{ env.DOCKER_PASSWORD }}
            - name: Push The new Image To Docker Hub
              run: docker push ${{ env.IMAGE }}:latest
