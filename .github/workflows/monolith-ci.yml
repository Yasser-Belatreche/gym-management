name: Continuous Integration

on:
    push:
        branches:
            - 'deploy/monolith'

env:
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    IMAGE: ${{ secrets.DOCKER_USERNAME }}/gym-management-monolith

jobs:
    build-test:
        name: Build & Test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: CD to monolith
              run: cd monolith
            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                  go-version: 1.22.2
            - name: Install Dependencies
              run: go mod download && go mod verify
            - name: Setup Test Environment
              run: scripts/start-test.sh -d
            - name: Apply Migrations
              run: scripts/apply-migrations.sh
            - name: Run Tests
              run: scripts/run-tests.sh

    dockerize:
        name: Dockerized and Push to Docker Hub
        runs-on: ubuntu-latest
        needs: build-test
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: CD to monolith
              run: cd monolith
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
            - name: Build The Image
              run: docker build . -f docker/prod/Dockerfile -t ${{ env.IMAGE }}:latest
            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ env.DOCKER_USERNAME }}
                  password: ${{ env.DOCKER_PASSWORD }}
            - name: Push The new Image To Docker Hub
              run: docker push ${{ env.IMAGE }}:latest

#    deploy:
#        name: Deploy To Production & Staging
#        runs-on: ubuntu-latest
#        needs: dockerize
#        env:
#            DB_HOST: ${{ secrets.DB_HOST }}
#            DB_PORT: ${{ secrets.DB_PORT }}
#            DB_USER: ${{ secrets.DB_USER }}
#            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#            DB_NAME: ${{ secrets.DB_NAME }}
#            PORT: ${{ secrets.PORT }}
#            JWT_SECRET: ${{ secrets.JWT_SECRET }}
#
#            CONTAINER_NAME: gym-management-backend-prod
#            CONTAINER_PORT: 8080
